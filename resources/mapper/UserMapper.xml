<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.newer.dao.sys.UserMapper">
    <resultMap id="BaseResultMap" type="com.newer.pojo.sys.User">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="realname" jdbcType="VARCHAR" property="realname"/>
        <result column="salt" jdbcType="VARCHAR" property="salt"/>
        <result column="description" jdbcType="VARCHAR" property="description"/>
        <result column="locked" jdbcType="INTEGER" property="locked"/>
        <result column="createtime" jdbcType="TIMESTAMP" property="createtime"/>
        <result column="deletestatus" jdbcType="INTEGER" property="deletestatus"/>
        <result column="sex" jdbcType="VARCHAR" property="sex"/>
        <result column="age" jdbcType="INTEGER" property="age"/>
        <result column="education" jdbcType="VARCHAR" property="education"/>
        <result column="telephone" jdbcType="VARCHAR" property="telephone"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="province" jdbcType="VARCHAR" property="province"/>
        <result column="city" jdbcType="VARCHAR" property="city"/>
        <result column="area" jdbcType="VARCHAR" property="area"/>
        <result column="address" jdbcType="VARCHAR" property="address"/>
        <result column="upno" jdbcType="INTEGER" property="upno"/>
        <result column="deptno" jdbcType="INTEGER" property="deptno"/>
        <collection property="dept"
                    select="com.newer.dao.sys.DeptMapper.selectByPrimaryKey" column="deptno"></collection>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and
                                    #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem"
                                             open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria"
                     separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and
                                    #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem"
                                             open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
		id, username, password, realname, salt, description, locked, createtime,
		deletestatus,
		sex, age, education, telephone, email, province, city, area, address,
		upno, deptno
	</sql>
    <select id="selectByExample" parameterType="com.newer.pojo.sys.examples.UserExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from tb_user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer"
            resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from tb_user
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from tb_user
		where id = #{id,jdbcType=INTEGER}
	</delete>
    <delete id="deleteByExample" parameterType="com.newer.pojo.sys.examples.UserExample">
        delete from tb_user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.newer.pojo.sys.User">
		insert into tb_user (id, username, password,
		realname, salt, description,
		locked, createtime, deletestatus,
		sex, age, education,
		telephone, email, province,
		city, area, address,
		upno, deptno)
		values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR},
		#{password,jdbcType=VARCHAR},
		#{realname,jdbcType=VARCHAR}, #{salt,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR},
		#{locked,jdbcType=INTEGER}, #{createtime,jdbcType=TIMESTAMP},
		#{deletestatus,jdbcType=INTEGER},
		#{sex,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER}, #{education,jdbcType=VARCHAR},
		#{telephone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR},
		#{province,jdbcType=VARCHAR},
		#{city,jdbcType=VARCHAR}, #{area,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR},
		#{upno,jdbcType=INTEGER}, #{deptno,jdbcType=INTEGER})
	</insert>
    <insert id="insertSelective" parameterType="com.newer.pojo.sys.User">
        insert into tb_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="username != null">
                username,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="realname != null">
                realname,
            </if>
            <if test="salt != null">
                salt,
            </if>
            <if test="description != null">
                description,
            </if>
            <if test="locked != null">
                locked,
            </if>
            <if test="createtime != null">
                createtime,
            </if>
            <if test="deletestatus != null">
                deletestatus,
            </if>
            <if test="sex != null">
                sex,
            </if>
            <if test="age != null">
                age,
            </if>
            <if test="education != null">
                education,
            </if>
            <if test="telephone != null">
                telephone,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="province != null">
                province,
            </if>
            <if test="city != null">
                city,
            </if>
            <if test="area != null">
                area,
            </if>
            <if test="address != null">
                address,
            </if>
            <if test="upno != null">
                upno,
            </if>
            <if test="deptno != null">
                deptno,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="realname != null">
                #{realname,jdbcType=VARCHAR},
            </if>
            <if test="salt != null">
                #{salt,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                #{description,jdbcType=VARCHAR},
            </if>
            <if test="locked != null">
                #{locked,jdbcType=INTEGER},
            </if>
            <if test="createtime != null">
                #{createtime,jdbcType=TIMESTAMP},
            </if>
            <if test="deletestatus != null">
                #{deletestatus,jdbcType=INTEGER},
            </if>
            <if test="sex != null">
                #{sex,jdbcType=VARCHAR},
            </if>
            <if test="age != null">
                #{age,jdbcType=INTEGER},
            </if>
            <if test="education != null">
                #{education,jdbcType=VARCHAR},
            </if>
            <if test="telephone != null">
                #{telephone,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="province != null">
                #{province,jdbcType=VARCHAR},
            </if>
            <if test="city != null">
                #{city,jdbcType=VARCHAR},
            </if>
            <if test="area != null">
                #{area,jdbcType=VARCHAR},
            </if>
            <if test="address != null">
                #{address,jdbcType=VARCHAR},
            </if>
            <if test="upno != null">
                #{upno,jdbcType=INTEGER},
            </if>
            <if test="deptno != null">
                #{deptno,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.newer.pojo.sys.examples.UserExample"
            resultType="java.lang.Long">
        select count(*) from tb_user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update tb_user
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.username != null">
                username = #{record.username,jdbcType=VARCHAR},
            </if>
            <if test="record.password != null">
                password = #{record.password,jdbcType=VARCHAR},
            </if>
            <if test="record.realname != null">
                realname = #{record.realname,jdbcType=VARCHAR},
            </if>
            <if test="record.salt != null">
                salt = #{record.salt,jdbcType=VARCHAR},
            </if>
            <if test="record.description != null">
                description = #{record.description,jdbcType=VARCHAR},
            </if>
            <if test="record.locked != null">
                locked = #{record.locked,jdbcType=INTEGER},
            </if>
            <if test="record.createtime != null">
                createtime = #{record.createtime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.deletestatus != null">
                deletestatus = #{record.deletestatus,jdbcType=INTEGER},
            </if>
            <if test="record.sex != null">
                sex = #{record.sex,jdbcType=VARCHAR},
            </if>
            <if test="record.age != null">
                age = #{record.age,jdbcType=INTEGER},
            </if>
            <if test="record.education != null">
                education = #{record.education,jdbcType=VARCHAR},
            </if>
            <if test="record.telephone != null">
                telephone = #{record.telephone,jdbcType=VARCHAR},
            </if>
            <if test="record.email != null">
                email = #{record.email,jdbcType=VARCHAR},
            </if>
            <if test="record.province != null">
                province = #{record.province,jdbcType=VARCHAR},
            </if>
            <if test="record.city != null">
                city = #{record.city,jdbcType=VARCHAR},
            </if>
            <if test="record.area != null">
                area = #{record.area,jdbcType=VARCHAR},
            </if>
            <if test="record.address != null">
                address = #{record.address,jdbcType=VARCHAR},
            </if>
            <if test="record.upno != null">
                upno = #{record.upno,jdbcType=INTEGER},
            </if>
            <if test="record.deptno != null">
                deptno = #{record.deptno,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update tb_user
        set id = #{record.id,jdbcType=INTEGER},
        username = #{record.username,jdbcType=VARCHAR},
        password = #{record.password,jdbcType=VARCHAR},
        realname = #{record.realname,jdbcType=VARCHAR},
        salt = #{record.salt,jdbcType=VARCHAR},
        description = #{record.description,jdbcType=VARCHAR},
        locked = #{record.locked,jdbcType=INTEGER},
        createtime = #{record.createtime,jdbcType=TIMESTAMP},
        deletestatus = #{record.deletestatus,jdbcType=INTEGER},
        sex = #{record.sex,jdbcType=VARCHAR},
        age = #{record.age,jdbcType=INTEGER},
        education = #{record.education,jdbcType=VARCHAR},
        telephone = #{record.telephone,jdbcType=VARCHAR},
        email = #{record.email,jdbcType=VARCHAR},
        province = #{record.province,jdbcType=VARCHAR},
        city = #{record.city,jdbcType=VARCHAR},
        area = #{record.area,jdbcType=VARCHAR},
        address = #{record.address,jdbcType=VARCHAR},
        upno = #{record.upno,jdbcType=INTEGER},
        deptno = #{record.deptno,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.newer.pojo.sys.User">
        update tb_user
        <set>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="realname != null">
                realname = #{realname,jdbcType=VARCHAR},
            </if>
            <if test="salt != null">
                salt = #{salt,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                description = #{description,jdbcType=VARCHAR},
            </if>
            <if test="locked != null">
                locked = #{locked,jdbcType=INTEGER},
            </if>
            <if test="createtime != null">
                createtime = #{createtime,jdbcType=TIMESTAMP},
            </if>
            <if test="deletestatus != null">
                deletestatus = #{deletestatus,jdbcType=INTEGER},
            </if>
            <if test="sex != null">
                sex = #{sex,jdbcType=VARCHAR},
            </if>
            <if test="age != null">
                age = #{age,jdbcType=INTEGER},
            </if>
            <if test="education != null">
                education = #{education,jdbcType=VARCHAR},
            </if>
            <if test="telephone != null">
                telephone = #{telephone,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="province != null">
                province = #{province,jdbcType=VARCHAR},
            </if>
            <if test="city != null">
                city = #{city,jdbcType=VARCHAR},
            </if>
            <if test="area != null">
                area = #{area,jdbcType=VARCHAR},
            </if>
            <if test="address != null">
                address = #{address,jdbcType=VARCHAR},
            </if>
            <if test="upno != null">
                upno = #{upno,jdbcType=INTEGER},
            </if>
            <if test="deptno != null">
                deptno = #{deptno,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.newer.pojo.sys.User">
		update tb_user
		set username = #{username,jdbcType=VARCHAR},
		password = #{password,jdbcType=VARCHAR},
		realname = #{realname,jdbcType=VARCHAR},
		salt = #{salt,jdbcType=VARCHAR},
		description = #{description,jdbcType=VARCHAR},
		locked = #{locked,jdbcType=INTEGER},
		createtime = #{createtime,jdbcType=TIMESTAMP},
		deletestatus = #{deletestatus,jdbcType=INTEGER},
		sex = #{sex,jdbcType=VARCHAR},
		age = #{age,jdbcType=INTEGER},
		education = #{education,jdbcType=VARCHAR},
		telephone = #{telephone,jdbcType=VARCHAR},
		email = #{email,jdbcType=VARCHAR},
		province = #{province,jdbcType=VARCHAR},
		city = #{city,jdbcType=VARCHAR},
		area = #{area,jdbcType=VARCHAR},
		address = #{address,jdbcType=VARCHAR},
		upno = #{upno,jdbcType=INTEGER},
		deptno = #{deptno,jdbcType=INTEGER}
		where id = #{id,jdbcType=INTEGER}
	</update>
    <!-- 登录 -->
    <select id="login" parameterType="com.newer.pojo.sys.User"
            resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from tb_user where username =#{username,jdbcType=VARCHAR} and password
        = #{password,jdbcType=VARCHAR}
    </select>
    <!-- 添加用户检测手机是否存在 -->
    <select id="selectUserBytelephone" parameterType="java.lang.String"
            resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from tb_user where telephone =#{telephone} and deletestatus = 0
    </select>
    <!-- 添加用户检测邮箱是否存在 -->
    <select id="selectUserByemail" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from tb_user where email =#{email} and deletestatus = 0
    </select>

    <!-- 循环删除用户，假删除 -->
    <update id="deleteUserByIds" parameterType="java.util.List">
        update tb_user set deletestatus=1 where id in
        <foreach collection="array" index="index" item="intArr" open="("
                 separator="," close=")">
            #{intArr}
        </foreach>
    </update>

    <!-- 给用户添加角色 -->
    <insert id="insertUserAndRole" parameterType="java.lang.Integer">
		insert into tb_user_role values(default,#{user},#{role})
	</insert>

    <!--根据用户id清空用户角色 -->
    <update id="deleteByUserId" parameterType="java.lang.Integer">
		delete from tb_user_role where userid =#{userid}
	</update>

    <!-- 根据角色名称查询用户 -->
    <select id="selectUserByRole" parameterType="java.lang.String" resultMap="BaseResultMap">
		select tb_user.* from tb_user
		inner join tb_user_role on tb_user.id = tb_user_role.userid
		inner join tb_role on tb_user_role.roleid= tb_role.id
		and tb_role.rolecode in(#{rolecode1},#{rolecode2})
	</select>
    <!-- 修改用户查询手机是否存在 -->
    <select id="selectUserEditByTelephone" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from tb_user where telephone =#{telphone} and deletestatus = 0
    </select>
    <!-- 修改用户查询邮箱是否存在 -->
    <select id="selectUserEditByEmail" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from tb_user where email =#{email} and deletestatus = 0
    </select>
</mapper>